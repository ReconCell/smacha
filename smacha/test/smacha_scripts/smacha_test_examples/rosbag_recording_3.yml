--- # SMACHA multiple rosbags recording multiple topics example
# NOTE: When executing this script, in order for the PublishMsgState template to
# publish messages, it needs to be able to subscribe to the tf topic which
# should be publishing something while the script is executing. A fake tf
# publication loop can be set up using, e.g., the following command:
# $ rostopic pub -r 100 /tf std_msgs/Empty "{}"
name: sm
template: Base
outcomes: [succeeded, aborted]
states:
- PUBLISH_MSG_1:
    template: PublishMsgState
    sub_topic: tf
    action: add
    userdata: {point: Point(), point_topic: smacha/rosbag_recording_3_point}
    remapping: {msg: point, topic: point_topic}
    transitions: {succeeded: PUBLISH_MSG_2, aborted: aborted}
- PUBLISH_MSG_2:
    template: PublishMsgState
    sub_topic: tf
    action: add
    userdata: {pose: Pose(), pose_topic: smacha/rosbag_recording_3_pose}
    remapping: {msg: pose, topic: pose_topic}
    transitions: {succeeded: PUBLISH_MSG_3, aborted: aborted}
- PUBLISH_MSG_3:
    template: PublishMsgState
    sub_topic: tf
    action: add
    userdata: {pointcloud: PointCloud(), pointcloud_topic: smacha/rosbag_recording_3_pointcloud}
    remapping: {msg: pointcloud, topic: pointcloud_topic}
    transitions: {succeeded: PUBLISH_MSG_4, aborted: aborted}
- PUBLISH_MSG_4:
    template: PublishMsgState
    sub_topic: tf
    action: add
    userdata: {pointcloud2: PointCloud2(), pointcloud2_topic: smacha/rosbag_recording_3_pointcloud2}
    remapping: {msg: pointcloud2, topic: pointcloud2_topic}
    transitions: {succeeded: PUBLISH_MSG_5, aborted: aborted}
- PUBLISH_MSG_5:
    template: PublishMsgState
    sub_topic: tf
    action: add
    userdata: {posearray: PoseArray(), posearray_topic: smacha/rosbag_recording_3_posearray}
    remapping: {msg: posearray, topic: posearray_topic}
    transitions: {succeeded: START_RECORDING_1, aborted: aborted}
- START_RECORDING_1:
    template: RecordROSBagState
    action: start
    userdata: {file_1: /tmp/rosbag_recording_3_bag_1.bag,
               topics_1: [smacha/rosbag_recording_3_point, smacha/rosbag_recording_3_pose]}
    remapping: {file: file_1, topics: topics_1}
    transitions: {succeeded: START_RECORDING_2, aborted: aborted}
- START_RECORDING_2:
    template: RecordROSBagState
    action: start
    userdata: {file_2: /tmp/rosbag_recording_3_bag_2.bag,
               topics_2: [smacha/rosbag_recording_3_pose, smacha/rosbag_recording_3_pointcloud]}
    remapping: {file: file_2, topics: topics_2}
    transitions: {succeeded: START_RECORDING_3, aborted: aborted}
- START_RECORDING_3:
    template: RecordROSBagState
    action: start
    userdata: {file_3: /tmp/rosbag_recording_3_bag_3.bag,
               topics_3: [smacha/rosbag_recording_3_pointcloud2, smacha/rosbag_recording_3_posearray]}
    remapping: {file: file_3, topics: topics_3}
    transitions: {succeeded: WAIT, aborted: aborted}
- WAIT:
    template: SleepState
    time: 10
    transitions: {succeeded: STOP_RECORDING}
- STOP_RECORDING:
    template: RecordROSBagState
    action: stop_all
    transitions: {succeeded: UNPUBLISH_MSG, aborted: aborted}
- UNPUBLISH_MSG:
    template: PublishMsgState
    sub_topic: tf
    action: remove_all
    transitions: {succeeded: succeeded, aborted: aborted}
