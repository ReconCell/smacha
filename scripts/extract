#! /usr/bin/env python

import sys
import argparse

import smacha

if __name__ == '__main__':
    # Parse arguments
    arg_parser = argparse.ArgumentParser(description='SMACHA Extract: Extract a container state from a script and ' +
                                                     'save it as a sub-script.')
    
    arg_parser.add_argument('script_file',
                            action='store',
                            help='SMACHA script (yaml file).')
    
    arg_parser.add_argument('state',
                            action='store',
                            help='Name of container state to be extracted.')
    
    arg_parser.add_argument('-s', '--scripts',
                            nargs = '*',
                            dest='script_dirs',
                            action='store',
                            default=[],
                            help='SMACHA script directories (directories containing yaml files).')
    
    arg_parser.add_argument('-sub', '--sub-script-output',
                            dest='sub_script_output_file',
                            action='store',
                            default='./sub_script_output.yml',
                            help='Generated SMACHA sub-script output (YAML file).')
    
    arg_parser.add_argument('-sup', '--super-script-output',
                            dest='super_script_output_file',
                            action='store',
                            default='./super_script_output.yml',
                            help='Generated SMACHA super-script output (YAML file).')
    
    
    args = arg_parser.parse_args()
    
    # Load parser
    parser = smacha.Parser(script_dirs = args.script_dirs)
    
    # Load and parse SMACHA script
    script = parser.parse(args.script_file, include_line_numbers=False)

    # Find the container state
    for state in script['states']:
        # Find the state name and variables in the current state
        state_name, state_vars = state.items()[0]

        # Check if it's the state we're looking for
        if state_name == args.state:
            break

    # Write the sub-script to a YAML file
    parser.dump(args.sub_script_output_file, [state])
